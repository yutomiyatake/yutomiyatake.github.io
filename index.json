[{"authors":null,"categories":null,"content":"Biography I am an associate professor at Cybermedia Center, Osaka University.\nMy research interests are in applied mathematics, especially in:\n numerical analysis of differential equations, espacially Geometric Integration numerical linear algebra including continuous optimizations computational uncertainty quantification  自己紹介 大阪大学 サイバーメディアセンター コンピュータ実験科学研究部門 の准教授です．応用数学や数理工学の研究を行っています． 主に微分方程式など連続的な数学的対象に対する数値計算手法の開発とその数学解析，およびそれらの実世界やデータ科学への応用に関心があります．数値計算でお困りの方はぜひご相談ください．\nまた，理学部数学科 や 大学院情報科学研究科情報基礎数学専攻 の学生を受け入れ教育を行っています．宮武を指導教員として希望する方はこちらもごらんください．\n研究分野  数値解析（特に微分方程式） 数値線形代数 不確実性定量化  連絡先 〒560-0043 大阪府豊中市待兼山町1-32 大阪大学 サイバーメディアセンター 601号室\n","date":1641194938,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1641194938,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Biography I am an associate professor at Cybermedia Center, Osaka University. My research interests are in applied mathematics, especially in: numerical analysis of differential equations, espacially Geometric Integration numerical linear","tags":null,"title":"Yuto Miyatake","type":"authors"},{"authors":[],"categories":[],"content":"Matlabなどで図を描き，PDFで保存すると，想定外に余白が大きすぎることがあり，TeXで貼り付けるときに少々困ります．そんなときは，ターミナルから\npdfcrop test.pdf  とすれば余白は最小化されます．なお，TeXをTeX Liveでインストールしていればpdfcropは標準でインストールされているはずです．\n（以下は何年も前の情報で，ここ数年，次のようなトラブルには遭遇していませんが，以前のwebページに載せていた情報をそのまま掲載します）\nこのpdfcropですが，ghostscript関係でエラーが起こることがあります．これは，TeXのインストール時に同時にインストールされるghostscriptとは別にhomebrewなどでghostscriptをインストールした場合に発生するようです．そんなときはターミナルから\nbrew link --overwrite ghostscript  とすれば解決するようです．\n","date":1643680384,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1643680384,"objectID":"26e3dd9becb9c24f4f6d44e35f5c5251","permalink":"https://yutomiyatake.github.io/post/pdfcrop/","publishdate":"2022-02-01T10:53:04+09:00","relpermalink":"/post/pdfcrop/","section":"post","summary":"Matlabなどで図を描き，PDFで保存すると，想定外に余白","tags":[],"title":"PDFの余白を小さくする","type":"post"},{"authors":["Yuto Miyatake"],"categories":[],"content":"JuliaでLU分解を利用して連立一次方程式を数値計算するとき，枢軸選択 (pivoting) に注意する必要があります．みるべき情報はここですが，備忘録も兼ねてまとめておきます．\njulia\u0026gt; using LinearAlgebra julia\u0026gt; A = [0 0 2; 1 0 1 ; 2 -1 1] 3×3 Array{Int64,2}: 0 0 2 1 0 1 2 -1 1 julia\u0026gt; L, U = lu(A) # 素直にLU分解 LU{Float64,Array{Float64,2}} L factor: 3×3 Array{Float64,2}: 1.0 0.0 0.0 0.5 1.0 0.0 0.0 0.0 1.0 U factor: 3×3 Array{Float64,2}: 2.0 -1.0 1.0 0.0 0.5 0.5 0.0 0.0 2.0 julia\u0026gt; L*U 3×3 Array{Float64,2}: 2.0 -1.0 1.0 1.0 0.0 1.0 0.0 0.0 2.0  L*UがAと一致しません．そもそもAの (1,1) 成分が 0 ですから，通常のLU分解は初手から破綻してしまいます．では何が行われているかというと枢軸選択 (pivoting) が行われているわけです．要するに行の入れ替えが行われています．\njulia\u0026gt; L, U, p = lu(A) LU{Float64,Array{Float64,2}} L factor: 3×3 Array{Float64,2}: 1.0 0.0 0.0 0.5 1.0 0.0 0.0 0.0 1.0 U factor: 3×3 Array{Float64,2}: 2.0 -1.0 1.0 0.0 0.5 0.5 0.0 0.0 2.0 julia\u0026gt; p # 置換を表すベクトル 3-element Array{Int64,1}: 3 2 1 julia\u0026gt; b = [4;3;5] # 連立一次方程式の右辺ベクトル 3-element Array{Int64,1}: 4 3 5 julia\u0026gt; A\\b #　連立一次方程式の解 3-element Array{Float64,1}: 1.0 -1.0 2.0 julia\u0026gt; x1 = U\\(L\\b) # pivotingを無視して計算すると... 3-element Array{Float64,1}: 0.5 -0.5 2.5 julia\u0026gt; x2 = U\\(L\\b[p]) # pivotingを考慮して計算するにはこのようにすればよい 3-element Array{Float64,1}: 1.0 -1.0 2.0  置換を表す行列も簡単に取り出せます．\njulia\u0026gt; F = lu(A); julia\u0026gt; F.P 3×3 Array{Float64,2}: 0.0 0.0 1.0 0.0 1.0 0.0 1.0 0.0 0.0 julia\u0026gt; (F.P)*A - L*U 3×3 Array{Float64,2}: 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  なお，枢軸選択を無視してLU分解することも可能です．\njulia\u0026gt; lu(A,Val(false)) # A は上の3x3行列 ERROR: ZeroPivotException: factorization encountered one or more zero pivots. Consider switching to a pivoted LU factorization.  怒られます．(1,1) 成分が 0 なのですから当然です．しかし，枢軸選択を無視してもLU分解が動く例もあります．\njulia\u0026gt; A = [1 1; 2 1] # この行列に対して 2×2 Array{Int64,2}: 1 1 2 1 julia\u0026gt; L,U　= lu(A) #　LU分解すると LU{Float64,Array{Float64,2}} L factor: 2×2 Array{Float64,2}: 1.0 0.0 0.5 1.0 U factor: 2×2 Array{Float64,2}: 2.0 1.0 0.0 0.5 julia\u0026gt; L*U # 枢軸選択が適用されますが 2×2 Array{Float64,2}: 2.0 1.0 1.0 1.0 julia\u0026gt; L,U = lu(A,Val(false)) # このようにすれば，枢軸選択は適用されません LU{Float64,Array{Float64,2}} L factor: 2×2 Array{Float64,2}: 1.0 0.0 2.0 1.0 U factor: 2×2 Array{Float64,2}: 1.0 1.0 0.0 -1.0 julia\u0026gt; L*U # 実際に L*U が A に一致します 2×2 Array{Float64,2}: 1.0 1.0 2.0 1.0  あえて枢軸選択を行わないメリットはあまりないとは思いますが，例えば，matlabの素朴なLU分解と比較するときなどには lu(A,Val(false)) は役立つかもしれません．\n","date":1641194938,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1641194938,"objectID":"84a45c868bbb672e3e13be1184be24d9","permalink":"https://yutomiyatake.github.io/post/lu-julia/","publishdate":"2022-01-03T16:28:58+09:00","relpermalink":"/post/lu-julia/","section":"post","summary":"JuliaでLU分解を利用して連立一次方程式を数値計算すると","tags":["Julia","線形計算"],"title":"JuliaでLU分解するときの注意点","type":"post"},{"authors":["Yuto Miyatake"],"categories":[],"content":"2019年頃から個人のウェブページをMkDocsで作ってきましたが，Hugoを使ってリニューアルしました．MkDocsも十分使い勝手がよく，おそらくこれからも講義用のページはMkDocsで構成していく予定ですが，備忘録（メモ）をブログ形式で残したいと思い（日付を残したいのと，タグ付け機能を使いたいのが主な動機です），HugoのAcademicテーマを利用することにしました．\n","date":1641194293,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1641194293,"objectID":"6c8941b4f73f981b10aa75dc78543414","permalink":"https://yutomiyatake.github.io/post/initial/","publishdate":"2022-01-03T16:18:13+09:00","relpermalink":"/post/initial/","section":"post","summary":"2019年頃から個人のウェブページをMkDocsで作ってきま","tags":[],"title":"ウェブページをリニューアルしました","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://yutomiyatake.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]